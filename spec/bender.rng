<?xml version="1.0"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
  ns="http://bender.igel.co.jp">

  <start>
    <ref name="component"/>
  </start>

  <define name="component">
    <element name="component">
      <optional>
        <ref name="id"/>
      </optional>
      <optional>
        <ref name="href-component"/>
      </optional>
      <interleave>
        <zeroOrMore>
          <ref name="link"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="view"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="property"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="watch"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="content">
    <element name="content">
      <optional>
        <ref name="id"/>
      </optional>
      <ref name="view-content"/>
    </element>
  </define>

  <define name="foreign-view-content">
    <element a:name="foreign view content">
      <anyName>
        <except>
          <nsName/>
        </except>
      </anyName>
      <zeroOrMore>
        <attribute>
          <anyName/>
        </attribute>
      </zeroOrMore>
      <ref name="view-content"/>
    </element>
  </define>

  <define name="get">
    <element name="get">
      <choice>
        <ref name="get-property"/>
        <ref name="get-dom-event"/>
        <ref name="get-event"/>
      </choice>
    </element>
  </define>

  <define name="link">
    <element name="link">
      <ref name="rel"/>
      <ref name="href-link"/>
    </element>
  </define>

  <define name="property">
    <element name="property">
      <ref name="property-name"/>
      <ref name="value"/>
      <optional>
        <ref name="as"/>
      </optional>
    </element>
  </define>

  <define name="text">
    <element name="text">
      <optional>
        <ref name="id"/>
      </optional>
      <text/>
    </element>
  </define>

  <define name="view">
    <element name="view">
      <optional>
        <ref name="id"/>
      </optional>
      <optional>
        <ref name="stack"/>
      </optional>
      <mixed>
        <zeroOrMore>
          <ref name="foreign-view-content"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="component"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="text"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="content"/>
        </optional>
      </mixed>
    </element>
  </define>

  <define name="view-content">
    <mixed>
      <zeroOrMore>
        <ref name="component"/>
      </zeroOrMore>
      <optional>
        <ref name="content"/>
      </optional>
      <zeroOrMore>
        <ref name="foreign-view-content"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="text"/>
      </zeroOrMore>
    </mixed>
  </define>

  <define name="watch">
    <element name="watch">
      <zeroOrMore>
        <ref name="get"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="set"/>
      </zeroOrMore>
    </element>
  </define>



  <define name="as">
    <attribute name="as">
      <choice>
        <value>boolean</value>
        <value>dynamic</value>
        <value>json</value>
        <value>number</value>
        <value>string</value>
      </choice>
    </attribute>
  </define>

  <define name="href-component">
    <attribute name="href">
      <data type="anyURI"/>
    </attribute>
  </define>

  <define name="href-link">
    <attribute name="href">
      <data type="anyURI"/>
    </attribute>
  </define>

  <define name="id">
    <attribute name="id">
      <data type="ID"/>
    </attribute>
  </define>

  <define name="property-name">
    <attribute name="name"/>
  </define>

  <define name="rel">
    <attribute name="rel">
      <choice>
        <value>script</value>
        <value>stylesheet</value>
      </choice>
    </attribute>
  </define>

  <define name="stack">
    <attribute name="stack">
      <choice>
        <value>bottom</value>
        <value>replace</value>
        <value>top</value>
      </choice>
    </attribute>
  </define>

  <define name="value">
    <attribute name="value"/>
  </define>

</grammar>

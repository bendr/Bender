<component xmlns="http://bender.igel.co.jp" id="game">
  <property name="unit" as="number" value="20"/>
  <property name="width" as="number" value="20"/>
  <property name="height" as="number" value="20"/>
  <property name="w" value="`width * `unit"/>
  <property name="h" value="`height * `unit"/>
  <view xmlns:svg="http://www.w3.org/2000/svg">
    <component href="../../dom/lib/timer.xml" id="timer" rate-ms="500"/>
    <svg:svg viewBox="0 0 `w `h">
      <svg:rect width="`w" height="`h" fill="#f8ca00"/>
      <component href="apple.xml" id="apple">
        <property name="size" value="#game`unit"/>
      </component>
      <component href="snake.xml" id="snake">
        <property name="size" value="#game`unit"/>
        <property name="head" value="[Math.floor(#game`width / 2), Math.floor(#game`height / 2)]"/>
        <property name="length" value="4"/>
      </component>
    </svg:svg>
  </view>
  <watch>
    <get event="!rendered"/>
    <set select="#apple" property="x"
      value="flexo.random_int(0, this.properties.width - 1)"/>
    <set select="#apple" property="y"
      value="flexo.random_int(0, this.properties.height - 1)"/>
  </watch>
  <watch>
    <get select="#timer" event="!tick">
      var snake = scope["#snake"];
      var head = snake.properties.head;
      snake.properties.head = [
        head[0] + Math.cos(snake.properties.direction),
        head[1] + Math.sin(snake.properties.direction)
      ];

    </get>
  </watch>
</component>


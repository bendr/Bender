<app xmlns="http://bender.igel.co.jp" xmlns:e="http://bender.igel.co.jp/e"
  xmlns:html="http://www.w3.org/1999/xhtml">
  <title>HTML Button component</title>

  <component id="button" xmlns:b="http://bender.igel.co.jp/b" b:enabled="true"
    xmlns:f="http://bender.igel.co.jp/f" f:tabindex="0" e:class="">
    <title>An HTML button component that responds to both mouse and touch
      events</title>
    <stylesheet>
      .bender-button { display: inline-block; cursor: default;
        padding: .3em .5em; background-color:#ddd; -moz-border-radius: 6px;
        -webkit-border-radius: 6px; border-radius: 6px;
        box-shadow: 0px 1px 0px #ccc; text-shadow: 0px 1px 0px #fff; }
      .bender-button.__disabled, .bender-button.__down { opacity: 0.5; }
      .bender-naked .bender-button { padding: 0; border: none;
        background-color: transparent; text-shadow: 0px 0px 0px; }
    </stylesheet>

    <view>
      <html:div class="bender-button" id="b"><content/></html:div>
    </view>

    <watch>
      <get property="enabled"/>
      <set>
        flexo.set_class_iff(this.views.b, "__disabled", !value);
        if (!value) {
          this.__tabindex = this.tabindex;
          this.tabindex = -1;
        } else if (this.hasOwnProperty("__tabindex")) {
          this.tabindex = this.__tabindex;
          delete this.__tabindex;
        }
      </set>
    </watch>

    <watch>
      <get property="tabindex"/>
      <set view="b" attr="tabindex"/>
    </watch>

    <watch>
      <get property="class"/>
      <set>
        if (value !== this["class"]) {
          if (this["class"]) flexo.remove_class(this.views.b, this["class"]);
          if (value) flexo.add_class(this.views.b, value);
        }
      </set>
    </watch>

    <watch>
      <get view="b" dom-event="mousedown"/>
      <set>
        value.preventDefault();
        if (this.enabled) flexo.add_class(this.views.b, "__down");
      </set>
      <watch>
        <get view="b" dom-event="mouseup"/>
        <set>
          if (flexo.remove_class(this.views.b, "__down")) {
            setTimeout((function() {
                bender.notify(this, "@pushed");
              }).bind(this), 0);
          }
        </set>
      </watch>
      <watch>
        <get dom-event="mouseup"/>
        <set>
          flexo.remove_class(this.views.b, "__down");
        </set>
      </watch>
    </watch>

    <watch>
      <get view="b" dom-event="keydown"/>
      <set>
        if (this.enabled) {
          if (value.keyCode === 13) {
            value.preventDefault();
            flexo.add_class(this.views.b, "__down");
            setTimeout((function() {
                flexo.remove_class(this.views.b, "__down");
                setTimeout((function() { bender.notify(this, "@pushed"); })
                  .bind(this), 0);
              }).bind(this), 150);
          } else if (value.keyCode === 27) {
            value.preventDefault();
            this.views.b.blur();
          }
        }
      </set>
    </watch>

  </component>

  <stylesheet>
    .red { background-color: #ff4040; color: white;
      text-shadow: 0px -1px 0px #844; }
  </stylesheet>

  <view>
    <html:p>
      This is a button: <component ref="button" id="ok-button">OK</component>
    </html:p>
    <html:p>
      You can enabled or disable it with this <component ref="button"
        id="toggle-button" e:class="red">toggle</component>.
    </html:p>
  </view>

  <watch>
    <get view="ok-button" event="@pushed">
      alert("OK");
    </get>
  </watch>

  <watch>
    <get view="toggle-button" event="@pushed">
      this.views["ok-button"].enabled = !this.views["ok-button"].enabled;
    </get>
  </watch>

</app>
